/* CHALLENGE: write a function that adds two numbers together and returns their sum in binary.

  JS NOTES (Bitwise):
  >>>	Zero fill right shift
  <<	Zero fill left shift; The first operand is an integer, the second integer is the # of bits of the first operand to be shifted to the left. 
  >>	Signed right shift; the first operand is an integer, the second operand is the # of bits of the first operand to be shifted to the right. 

  JS NOTES:
    .toString(radix) // can take an optional radix which must be an integer between 2 and 36. 2 will show a binary. 

  BINARY NOTES (base 2):
    1 => 1
    2 => 10
    3 => 11
    4 => 100
    5 => 101

  RADIX (i.e. Base) - different ways to represent the same number depending on the system
    Base 2 - Binary 
    Base 8 - Octal
    Base 16 - Hexadecimal 

*/

//SOLUTION 1

function addBinary(a,b) {
  let sum = a+b;
  return (sum >>> 0).toString(2)
}

//SOLUTION 2

function addBinary(a,b) {
  return (a+b).toString(2)
}

//SOLUTION 3

function addBinary(a,b) {
  let sum = a + b;
  let res = '';
  while (sum >= 1) {
    res = sum % 2 + sum;
    sum = Math.floor(sum / 2);
  }
  return res;
}